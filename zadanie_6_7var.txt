#include "stdafx.h"
#include "iostream"
#include "stdio.h"

using namespace std;

template <class type> class Array{
	type *t,*newt;
	int size;
	public:
		Array();
		~Array();
		void set(int n,type q[]);
		void view();
		void viewnew();
		void run();
};

template <class type> Array<type>::Array()
{
	cout << "--Создание конструктора... Завершено." << endl;
}

template <class type> Array<type>::~Array()
{
	delete t;
	delete newt;
	cout << "--Деструктор." << endl;
}

template <class type> void Array<type>::set(int n,type q[])
{
	t = new type [n+1];
	for(int i=1;i<n+1;i++)
	{
		t[i]=q[i];
	}
	size=n+1;
	cout << "--Создание массива... Завершено." << endl;
}

template <class type> void Array<type>::view()
{
	cout << "Исходный массив: ";
	for(int i=1;i<size;i++)
	{
		cout << t[i] << "  ";
	}
	cout << endl << endl;
}

template <class type> void Array<type>::run()
{
	newt = new type [size];
	for(int i=0;i<size;i++)
	{
		newt[i]=t[i]*i;
	}
}

template <class type> void Array<type>::viewnew()
{
	cout << "Массив согласно алгоритму: ";
	for(int i=1;i<size;i++)
	{
		cout << newt[i] << "  ";
	}
	cout << endl << endl;
}


int _tmain(int argc, _TCHAR* argv[])
{
	setlocale (LC_ALL, "Russian");
	
	int n,*n1;
	cout << "Введиие размерность массива: ";
	cin >> n;
	n1 = new int [n+1];
	for(int i=1;i<n+1;i++)
	{
		cout << "Введите n["<<i<<"]: ";
		cin >> n1[i];
	}
	Array<int> object;
	object.set(n,n1);
	object.view();
	object.run();
	object.viewnew();


	cin.get();
	return 0;
}

